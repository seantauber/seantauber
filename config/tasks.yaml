# Task Definitions for GitHub GenAI List

# Stage 3: Analysis Stage (Agent-Based)
analyze_repo_batch:
  description: |
    Analyze the provided batch of repositories using consistent criteria.
    Repositories are provided in the task context as 'repos'.

    1. For each repository in the provided batch:
       - Evaluate code quality and documentation
       - Check community engagement metrics
       - Assess relevance to GenAI/AI/ML
       - Determine appropriate category and subcategory
       - Calculate quality score (0.0 to 1.0)

    2. Quality Criteria:
       - Documentation completeness and clarity
       - Code organization and maintainability
       - Community engagement level
       - Active maintenance
       - AI/ML relevance and innovation

    3. Categories:
       - Generative AI
       - Artificial Intelligence
       - MLOps & AI Infrastructure
       - Machine Learning Tools
       - Development Tools
       - Other AI-Related

    4. Analysis Requirements:
       - Maintain consistent scoring across batches
       - Include detailed justification for scores
       - Follow category taxonomy strictly
       - Consider both technical merit and practical utility

    Return the analysis results as a structured output that can be saved to the database.
  expected_output: Analysis results for the provided repository batch
  agent: analyzer

# Stage 4: README Stage (Agent-Based)
generate_readme_content:
  description: |
    Generate a comprehensive README.md using the provided analyzed repositories.
    Analyzed repositories are provided in the task context as 'analyzed_repos'.

    1. Structure Requirements:
       - Maintain consistent category organization
       - Include table of contents
       - Preserve static sections
       - Update "Last edited" timestamp
       - Follow markdown best practices

    2. Content Guidelines:
       - Clear category descriptions
       - Consistent repository entries
       - Highlight key features
       - Include relevant metrics
       - Maintain professional tone

    3. Static Sections to Preserve:
       - "How This Landing Page Works"
       - "How to Implement This Landing Page"
       - "Contributing"
       - "License"

    4. Repository Entry Format:
       - Repository name and link
       - Brief description
       - Key features/capabilities
       - Community metrics
       - Category placement

    Return the complete README content as a string.
  expected_output: Complete README.md content as a string
  agent: readme_generator

validate_readme:
  description: |
    Validate the provided README content for completeness and correctness.
    README content is provided in the task context as 'readme_content'.

    1. Validation Checks:
       - All static sections preserved exactly
       - Proper markdown formatting
       - Valid repository links
       - Consistent category structure
       - Complete table of contents
       - Updated timestamp

    2. Quality Checks:
       - Clear organization
       - Professional presentation
       - Consistent formatting
       - Proper section hierarchy
       - Accurate repository information

    3. Requirements:
       - No broken links
       - No formatting errors
       - All repositories properly categorized
       - All required sections present
       - Proper markdown syntax

    Return a validation report indicating any issues found.
  expected_output: Validation report for the README content
  agent: readme_generator
